package com.system.toursandtravelmanagement.Controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.system.toursandtravelmanagement.DTO.UserLoginDTO;

import com.system.toursandtravelmanagement.service.DefaultUserService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.AuthenticationException;

@Controller
public class LoginController {
    @Autowired
    private DefaultUserService userService;

    @ModelAttribute("user")
    public UserLoginDTO userLoginDTO() {
        return new UserLoginDTO();
    }

    @GetMapping("/login")
    public String login(@RequestParam(value = "error", defaultValue = "false") boolean loginError, Model model) {
        if (loginError) {
            model.addAttribute("error", "Invalid Email or Password. Please try again.");
        }
        return "common/login";
    }

    @PostMapping("/login")
    public String loginUser(@ModelAttribute("user") UserLoginDTO userLoginDTO, Model model) {
        try {
            Authentication authentication = new UsernamePasswordAuthenticationToken(
                    userLoginDTO.getUsername(), userLoginDTO.getPassword());
            Authentication authenticated = authenticationManager.authenticate(authentication);
            SecurityContextHolder.getContext().setAuthentication(authenticated);

            // Check if authentication is successful
            if (authenticated.isAuthenticated()) {
                return "redirect:/home"; // Redirect to home page after successful login
            } else {
                model.addAttribute("error", "Authentication failed. Please check your password and try again.");
                return "common/login"; // Return the login form with an error message
            }
        } catch (AuthenticationException e) {
            model.addAttribute("error", "Authentication failed. Please check your username and password and try again.");
            return "common/login"; // Return the login form with an error message
        }
    }
}
